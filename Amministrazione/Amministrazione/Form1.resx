<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>